TẤT TẦN TẬT VỀ PYTHON

I. TỔNG QUAN VỀ NGÔN NGỮ LẬP TRÌNH PYTHON:

    1. Vài nét về Python:

    - Python là ngôn ngữ lập trình bậc cao dành cho lập trình đa năng
    - Python được tạo ra lần đầu vào năm 1991 bởi Guido van Rossum. Python là 1 dự án mã nguồn mở do Python Software Foundation quản lý.
    - Python là một ngôn ngữ dễ đọc, dễ học, dễ nhớ do có cú pháp ngắn gọn, cấu trúc rõ ràng, thuận tiện cho người mới lập trình.
    - Tương tự như Perl, Ruby, Scheme, Smalltalk, Tcl; Python tạo kiểu động và dùng cơ chế cấp phát bộ nhớ tự động.
    - Ban đầu, Python được phát triển để chạy trên Hệ điều hành UNIX. Sau này, Python được phát triển để có thể chạy ở mọi điều hành như Windows, Linux, macOS và các hệ điều hành khác thuộc họ UNIX

    2. Sự phổ biến của Python:

    - Python được sử dụng rộng rãi ở mọi lĩnh vực như Web, phần mềm, lập trình nhúng,... //(Lập trình nhúng là đặc điểm riêng của Python)
    - Đặc biệt, Python là ngôn ngữ được sử dụng phổ biến trong các lĩnh vực của Khoa học dữ liệu như AI, Deep Learning, Machine Learning, Data Analysis, Natural Language Processing, ...
    - Python luôn có mặt trong bảng xếp hạng những ngôn ngữ lập trình phổ biến nhất

II. TÍNH NĂNG VÀ TRIẾT LÝ CỦA PYTHON:

    1. Tính năng của Python:

    - Python là ngôn ngữ lập trình đa mẫu hình. Lập trình Hướng đối tượng (OOP) và Lập trình Cấu trúc đều được Python hỗ trợ
    - Các tính năng của Python cũng hỗ trợ cho lập trình hàm và lập trình hướng khía cạnh
    - Python sử dụng kiểu động và một dạng kết hợp giữa điểm tham chiếu và bộ dọn rác sẽ kiểm tra theo chu kỳ để quản lý bộ nhớ.

    2 Triết lý của Python: 

    - Python có 1 easter egg là bài thơ tên "Zen of Python". Bài thơ được viết dưới dạng thơ Haiku và nội dung là những quy tắc chỉ dẫn cho việc viết chương trình nói chung và lập trình Python nói riêng: 

        Đẹp đẽ tốt hơn xấu xí
        Minh bạch tốt hơn ngầm định
        Đơn giản tốt hơn phức tạp
        Phức tạp tốt hơn rắc rối
        Tính dễ đọc rất quan trọng

    // Có thể đọc bài thơ này bằng lệnh import this

III. Hướng đối tượng trong Python
    
    1. Tính Đóng gói:

    - Tính đóng gói (Encapsulation) là tính chất theo hướng bảo mật trong lập trình hướng đối tượng, tính chất này sẽ là một quy tắc yêu cầu trạng thái bên trong của một đối tượng được bảo vệ và tránh truy cập được từ các đối tượng hay đoạn mã truy cập ở bên ngoài lớp đó. Việc đóng gọi nghĩa là tránh các đoạn mã bên ngoài không thể nhìn thấy và thay đổi trạng thái của đối tượng đó.
    - Trong Python có 3 phạm vi truy cập thuộc tính của 1 đối tượng:
        * Public --> Thuộc tính có thể được sử dụng ở bất cứ đâu trong chương trình.
        * Protected ---> Thuộc tính chỉ được gọi ở lớp chứa nó và lớp kế thừa lớp đó, không thể gọi ở các lớp khác.
        * Private --> Thuộc tính chỉ được gọi ở trong lớp chứa nó, không thể gọi ở các lớp khác
    - Phạm vi truy cập của 1 thuộc tính được xác định bằng số dấu gạch chân ('_') đứng trước tên thuộc tính đó khi nó được định nghĩa 
        * Public: Trước tên thuộc tính không có dấu gạch chân.
        vd: grade = 0
        * Protected: Trước tên thuộc tính có 1 dấu gạch chân
        vd: _grade = 0
        * Private: Trước tên thuộc tính có 2 dấu gạch chân
        vd: __grade = 0
    - Sử dụng __init__() như là 1 phương thức khởi tạo:
        class Person:
            name=""
            age=0
            def __init__(self,Ten, Tuoi):
                self.name=Ten
                self.age=Tuoi
                
    2. Tính kế thừa:

    - Tính kế thừa cho phép 1 lớp có kể kế thừa các thuộc tính và phương thức từ các lớp khác đã được định nghĩa.
    - Trong Python, để khai báo 1 lớp kế thừa 1 lớp khác, sử dụng cú pháp như sau:

        class Human:
            # Code của class Human
        
        Class Student(Human):
            # Code của class Student
    - Khi 1 lớp Con kế thừa 1 lớp Cha, Các đối tượng thuộc lớp con đèu mang các thuộc tính và phương thức có phạm vi public và protected của lớp cha đó.
    - Python cho phép 1 lớp có thể kế thừa từ nhièu lớp khác (Đa kế thừa)Khi đó, lớp con sẽ kể thừa tất cả các đặc tính của các lớp cha  

        class Horse:
            # code của class Horse
        
        class Donkey:
            # code của class Donkey
        
        class Hinny(Horse, Donkey):
            # code của class Hinny
    3. Tính đa hình
    
    - Tính đa hình cho phép 1 phương thức có thể sử dụng chung cho nhiều đối tượng thuộc lớp khác nhau cùng kế thừa 1 lớp cha
    - Trong 1 lớp đang kế thừa từ 1 lớp cha. Python cho phép ghi đè tự do lên phương thức của lớp cha mà không cần khai báo trước.

        class Animal:
            def Moving(self)
                print("An Animal is moving") 
        
        class Human(Animal):
            def Moving(self):
                print("A human is walking")
    4. Tính trừu tượng

    - Tính trừu tượng cho phép cho 1 lớp chỉu đưa ra các thành phần trong 1 đối tuọng mà không thực hiện gì với thành phần đó. Các thành phần này sẽ được định nghĩa ở trong lớp con kế thừa lớp đó
    - Trong python, sử dụng từ khóa pass để khai báo 1 phương thức không thực thi điều gì.

        class Person:
            def Work(self):
                pass
        
        class Teacher(Person):
            def Work(self):
                print("Teacher is teaching")
        
        class Student(Person):
            def Work(self)
                print("Student is studying")


    